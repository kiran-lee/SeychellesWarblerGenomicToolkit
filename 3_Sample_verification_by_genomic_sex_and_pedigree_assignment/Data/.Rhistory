BloodIDSequences$ID<-trimws(sapply(strsplit(BloodIDSequences$ID, "-"), `[[`, 2))
##Pilot sequences use Blood Tube Number, the rest use BloodID
PilotSequences$Identifier<-paste("BloodTubeNumber")
MissingBloodIDSequences$Identifier<-paste("BloodID")
BloodIDSequences$Identifier<-paste("BloodID")
##Make IDs numeric
PilotSequences$ID<-as.numeric(PilotSequences$ID)
BloodIDSequences$ID<-as.numeric(BloodIDSequences$ID)
MissingBloodIDSequences$ID<-as.numeric(MissingBloodIDSequences$ID)
Identifiers26076$Sample_number<-as.numeric(Identifiers26076$`Sample number`)
Identifiers26076$BloodID<-as.numeric(Identifiers26076$`Sample name`)
#Join BirdIDs
PilotSequences <- PilotSequences %>%
left_join(select(PilotIdentifiers, BirdID, BloodTubeNumber), by = c("ID" = "BloodTubeNumber"))
BloodIDSequences$BloodID<-BloodIDSequences$ID
BloodIDSequences <- BloodIDSequences %>%
left_join(select(Identifiers, BirdID, BloodID), by = c("ID" = "BloodID"))
names(BloodIDSequences)[names(BloodIDSequences) == 'BirdID.x'] <- 'BirdID'
BloodIDSequences<-BloodIDSequences[!duplicated(BloodIDSequences), ]
MissingBloodIDSequences <- MissingBloodIDSequences %>%
left_join(select(Identifiers26076, Sample_number, BloodID), by = c("ID" = "Sample_number"))
MissingBloodIDSequences <- MissingBloodIDSequences %>%
left_join(select(Identifiers, BirdID, BloodID), by = c("BloodID" = "BloodID"))
##Concatenate into one file (2018 individuals including duplicates)
MissingBloodIDSequencesFormatted= subset(MissingBloodIDSequences, select = c(Plate, SeqID, Coverage, Filepath, BloodID, Identifier, BirdID))
colnames(MissingBloodIDSequencesFormatted)[colnames(MissingBloodIDSequencesFormatted) == 'BloodID'] <- 'ID'
BloodIDSequencesFormatted= subset(BloodIDSequences, select = c(Plate, SeqID, Coverage, Filepath, ID, Identifier, BirdID))
SequencedIndividualsBirdIDs=rbind(PilotSequences,MissingBloodIDSequencesFormatted,BloodIDSequencesFormatted)
##Add in missing BirdIDs from LIMS26757p1raw4
SequencedIndividualsBirdIDsExtra<- SequencedIndividualsBirdIDs %>%
left_join(select(LIMS26757p1raw4, BirdID, BloodID), by = c("ID" = "BloodID")) %>%
mutate(BirdID = coalesce(BirdID.x, BirdID.y)) %>%
select (-c(BirdID.x, BirdID.y))
##Add in inbreeding coefficients
##ROH calculated using PLINK:  --allow-extra-chr --bfile mergedimputedchromosomes --homozyg-density 200 --homozyg-gap 300 --homozyg-het 2 --homozyg-kb 1300 --homozyg-snp 50 --homozyg-window-het 2 --homozyg-window-missing 4 --homozyg-window-snp 50 --out mergedimputedchromosomes
MySequencedIndividuals<-read_excel("mergedimputedchromosomes.hom.indiv.xlsx")
MySequencedIndividuals$IID<-sub('.', '', MySequencedIndividuals$IID)
MySequencedIndividuals<-MySequencedIndividuals %>% separate(IID, c('Filepath1', 'Filepath2', 'Filepath3', 'Plate','Filepath4','SeqID'), sep = '/', convert = TRUE)
MySequencedIndividuals = subset(MySequencedIndividuals, select = c(Plate, SeqID, NSEG, KB, KBAVG))
MySequencedIndividuals$ID<-MySequencedIndividuals$SeqID
MySequencedIndividuals$FROH<-MySequencedIndividuals$KB/1091184475*1000
SequencedIndividualsBirdIDsExtraROH<- SequencedIndividualsBirdIDsExtra %>%
full_join(select(MySequencedIndividuals, FROH, SeqID), by = c("SeqID" = "SeqID"))
##Large ROH (ROH>3.75Mb)
MySequencedIndividualsLargeROH<-read_table("largeROH.hom.indiv")
##Add in life-history traits
#Lifespan ----
##Read files
BirthDate <- read_csv("BirthDate27032023.csv", col_types = cols(BirthDate = col_date(format = "%d/%m/%Y"))) #In query table, this is BirdID
LastSeenYear <- read_csv("CurrentBTOextended27032023.csv") #In query table, this is CurrentBTOextended
##Make terms
###BirthYear from BirthDate
BirthDate <- BirthDate %>%
mutate(BirthYear = format(BirthDate, "%Y")) %>%
mutate(BirthYear = as.numeric(BirthYear))
###Lifespan
Lifespan <- merge(BirthDate,LastSeenYear,by="BirdID", all = TRUE) %>%
mutate(LastSeenYea = as.numeric(LastSeenYea)) %>%
mutate(BirthYear = as.numeric(BirthYear)) %>%
mutate(Lifespan = LastSeenYea - BirthYear) %>%
filter(LastSeenYea < 2022)  %>%
select(BirdID,Lifespan,BirthYear,LastSeenYea)
colnames(Lifespan)[colnames(Lifespan) == 'LastSeenYea'] <- 'LastSeenYear'
##Link lifespan to dataframe
SequencedIndividualsBirdIDsExtraROH<- merge(SequencedIndividualsBirdIDsExtraROH, Lifespan, by="BirdID", all = TRUE)
SurvivingBirdsLifespan<-subset(SequencedLifespan, SequencedLifespan$Lifespan>0)
##Link n offspring to dataframe
Offspring <- read_csv("Offspring27032023.csv",col_types = cols(BirthDate = col_date(format = "%d/%m/%Y")))
ROcount <- Offspring %>% filter(Confidence > 80) %>% count(Parent) %>% rename(BirdID = Parent,ReproductiveOutput = n)
SequencedIndividualsBirdIDsExtraROH<- merge(SequencedIndividualsBirdIDsExtraROH, ROcount, by="BirdID", all = TRUE)
##Deduplicated dataset. For duplicated samples, pick the one with best coverage
SequencedIndividualsBirdIDsExtraDeduplicated<- SequencedIndividualsBirdIDsExtraROH %>%
group_by(BirdID) %>%
top_n(1, abs(Coverage))
View(SequencedIndividualsBirdIDsExtraDeduplicated)
#Create the dataframe for the analysis
## We want to create dataframe of sample filenames (.bam files), their BirdID,and Coverage.
CoverageExtraSamples <- read.delim("coveragefilenameallsortedextrasamples.txt",sep=" ",header=F)
View(CoverageExtraSamples)
#Create the dataframe for the analysis
## We want to create dataframe of sample filenames (.bam files), their BirdID,and Coverage.
CoverageExtraSamples <- read.delim("coveragefilenameallsortedextrasamples.txt",sep=" ",header=F)
names(CoverageExtraSamples)[names(CoverageExtraSamples) == 'V1'] <- 'SeqID'
names(CoverageExtraSamples)[names(CoverageExtraSamples) == 'V2'] <- 'Coverage'
CoverageExtraSamples$Filepath<-CoverageExtraSamples$SeqID
CoverageExtraSamples$Filepath <- gsub("^.{0,4}", "", CoverageExtraSamples$Filepath)
CoverageExtraSamples$SeqID<-sub('.', '', CoverageExtraSamples$SeqID)
CoverageExtraSamples<-CoverageExtraSamples %>% separate(SeqID, c('Filepath1', 'Filepath2', 'Filepath3', 'Filepath4','Plate','Filepath5','SeqID'), sep = '/', convert = TRUE)
CoverageExtraSamples = subset(CoverageExtraSamples, select = c(Plate, SeqID, Coverage, Filepath))
CoverageExtraSamples$ID<-CoverageExtraSamples$SeqID
##Files to match BirdIDs
Identifiers<-read_excel("SheffieldSubmissions.xlsx")
Identifiers26076<-read_excel("ID 26076_Sample information table.xlsx")
PilotIdentifiers<-read_excel("SamplesForPilotTargetCapture_290119_sortBTN_Qubit.xlsx")
LIMS26629renamed<-read.table("lims26629renamed.txt",sep=" ",header=F)
LIMS26757p1raw4<-read.csv("Samples for Sequencing 25072023.csv",colClasses=c("NULL",NA,NA,NA,NA,NA))
MissingLIMS26757p1raw4 <- data.frame(BirdID=c(6572,6145,6373,5904,6144,6651),
FieldRing=c(NA,NA,NA,NA,NA,NA),
BTO=c(NA,NA,NA,NA,NA,NA),
BloodID=c(8178, 5883,6287,5620,5880,7239),
BloodTubeNumber=c(NA,NA,NA,NA,NA,NA),
stringsAsFactors=FALSE)
LIMS26757p1raw4<-rbind(LIMS26757p1raw4,MissingLIMS26757p1raw4)
BloodID<-read.csv("BloodID.csv")
##Clean ID numbers
LIMS26629renamed<-LIMS26629renamed %>% arrange(V1)
LIMS26629renamed$SeqID<-CoverageExtraSamples$SeqID[CoverageExtraSamples$Plate=='LIMS26629']
LIMS26629renamed<-LIMS26629renamed %>%
mutate(SeqID=sort(SeqID))
LIMS26629renamed$V1<-sub(".*\\-", "", LIMS26629renamed$V1)
colnames(LIMS26629renamed)[colnames(LIMS26629renamed) == 'V1'] <- 'ID'
#Fix 6 samples that were mislabeled, as identified by Rowan
LIMS26629renamed$ID[which(LIMS26629renamed$SeqID == "100_ACAAGAACCT-CGATACTGAA_L002__all_mapped_rehead.bam")] <- 2544
LIMS26629renamed$ID[which(LIMS26629renamed$SeqID == "101_AGAGTATGTG-AGATGGCTTC_L002__all_mapped_rehead.bam")] <- 3227
LIMS26629renamed$ID[which(LIMS26629renamed$SeqID == "96_CAACCATACA-ACCGGTTATA_L002__all_mapped_rehead.bam")] <- 764
LIMS26629renamed$ID[which(LIMS26629renamed$SeqID == "97_GTAGGCCGTT-GCCACTGTCT_L002__all_mapped_rehead.bam")] <- 2688
LIMS26629renamed$ID[which(LIMS26629renamed$SeqID == "98_CGGATTGATC-AGTCACAACA_L002__all_mapped_rehead.bam")] <- 2493
LIMS26629renamed$ID[which(LIMS26629renamed$SeqID == "99_ACTGGCAAGA-TGTTGTCCAT_L002__all_mapped_rehead.bam")] <- 2522
CoverageExtraSamples$ID[CoverageExtraSamples$Plate=="LIMS26629"]<-NA
CoverageExtraSamples <- merge(CoverageExtraSamples,LIMS26629renamed,by="SeqID", all = TRUE) %>%
mutate(ID = coalesce(ID.x, ID.y)) %>%
select (-c(ID.x, ID.y))
PilotSequences<-subset(CoverageExtraSamples, CoverageExtraSamples$Plate=="LIMS24675"|CoverageExtraSamples$Plate=="LIMS25133")
PilotSequences$ID<-trimws(sapply(strsplit(PilotSequences$ID, "_"), `[[`, 2))
MissingBloodIDSequences<-subset(CoverageExtraSamples, CoverageExtraSamples$Plate == "LIMS26076p4"|CoverageExtraSamples$Plate == "LIMS26076raw")
MissingBloodIDSequences$ID<-as.numeric(sapply(strsplit(MissingBloodIDSequences$ID, "_"), "[[", 1))
BloodIDSequences<-subset(CoverageExtraSamples, CoverageExtraSamples$Plate!="LIMS24675"& CoverageExtraSamples$Plate!="LIMS25133"&CoverageExtraSamples$Plate != "LIMS26076p4"&CoverageExtraSamples$Plate != "LIMS26076raw" )
BloodIDSequences$ID <- sub('_repeat','',BloodIDSequences$ID)
BloodIDSequences$ID <- sub('-repeat','',BloodIDSequences$ID)
BloodIDSequences$ID<-trimws(sapply(strsplit(BloodIDSequences$ID, "_"), `[[`, 1))
BloodIDSequences$ID<-trimws(sapply(strsplit(BloodIDSequences$ID, "-"), `[[`, 2))
BloodIDSequences$ID<-sub('.+-(.+)', '\\1', BloodIDSequences$ID)
##Pilot sequences use Blood Tube Number, the rest use BloodID
PilotSequences$Identifier<-paste("BloodTubeNumber")
MissingBloodIDSequences$Identifier<-paste("BloodID")
BloodIDSequences$Identifier<-paste("BloodID")
##Make IDs numeric
PilotSequences$ID<-as.numeric(PilotSequences$ID)
BloodIDSequences$ID<-as.numeric(BloodIDSequences$ID)
MissingBloodIDSequences$ID<-as.numeric(MissingBloodIDSequences$ID)
Identifiers26076$Sample_number<-as.numeric(Identifiers26076$`Sample number`)
Identifiers26076$BloodID<-as.numeric(Identifiers26076$`Sample name`)
#Join BirdIDs
PilotSequences <- PilotSequences %>%
left_join(select(PilotIdentifiers, BirdID, BloodTubeNumber), by = c("ID" = "BloodTubeNumber"))
BloodIDSequences$BloodID<-BloodIDSequences$ID
BloodIDSequences <- BloodIDSequences %>%
left_join(select(Identifiers, BirdID, BloodID), by = c("ID" = "BloodID"))
names(BloodIDSequences)[names(BloodIDSequences) == 'BirdID.x'] <- 'BirdID'
BloodIDSequences<-BloodIDSequences[!duplicated(BloodIDSequences), ]
MissingBloodIDSequences <- MissingBloodIDSequences %>%
left_join(select(Identifiers26076, Sample_number, BloodID), by = c("ID" = "Sample_number"))
MissingBloodIDSequences <- MissingBloodIDSequences %>%
left_join(select(Identifiers, BirdID, BloodID), by = c("BloodID" = "BloodID"))
##Concatenate into one file (2018 individuals including duplicates)
MissingBloodIDSequencesFormatted= subset(MissingBloodIDSequences, select = c(Plate, SeqID, Coverage, Filepath, BloodID, Identifier, BirdID))
colnames(MissingBloodIDSequencesFormatted)[colnames(MissingBloodIDSequencesFormatted) == 'BloodID'] <- 'ID'
BloodIDSequencesFormatted= subset(BloodIDSequences, select = c(Plate, SeqID, Coverage, Filepath, ID, Identifier, BirdID))
SequencedIndividualsBirdIDs=rbind(PilotSequences,MissingBloodIDSequencesFormatted,BloodIDSequencesFormatted)
##Add in missing BirdIDs from LIMS26757p1raw4
SequencedIndividualsBirdIDsExtra<- SequencedIndividualsBirdIDs %>%
left_join(select(LIMS26757p1raw4, BirdID, BloodID), by = c("ID" = "BloodID")) %>%
mutate(BirdID = coalesce(BirdID.x, BirdID.y)) %>%
select (-c(BirdID.x, BirdID.y))
View(SequencedIndividualsBirdIDs)
##Add in inbreeding coefficients
##ROH calculated using PLINK:  --allow-extra-chr --bfile mergedimputedchromosomes --homozyg-density 200 --homozyg-gap 300 --homozyg-het 2 --homozyg-kb 1300 --homozyg-snp 50 --homozyg-window-het 2 --homozyg-window-missing 4 --homozyg-window-snp 50 --out mergedimputedchromosomes
MySequencedIndividuals<-read_excel("mergedimputedchromosomes.hom.indiv.xlsx")
MySequencedIndividuals$IID<-sub('.', '', MySequencedIndividuals$IID)
MySequencedIndividuals<-MySequencedIndividuals %>% separate(IID, c('Filepath1', 'Filepath2', 'Filepath3', 'Plate','Filepath4','SeqID'), sep = '/', convert = TRUE)
MySequencedIndividuals = subset(MySequencedIndividuals, select = c(Plate, SeqID, NSEG, KB, KBAVG))
MySequencedIndividuals$ID<-MySequencedIndividuals$SeqID
MySequencedIndividuals$FROH<-MySequencedIndividuals$KB/1091184475*1000
SequencedIndividualsBirdIDsExtraROH<- SequencedIndividualsBirdIDsExtra %>%
full_join(select(MySequencedIndividuals, FROH, SeqID), by = c("SeqID" = "SeqID"))
View(SequencedIndividualsBirdIDsExtraROH)
##Add in life-history traits
#Lifespan ----
##Read files
BirthDate <- read_csv("BirthDate27032023.csv", col_types = cols(BirthDate = col_date(format = "%d/%m/%Y"))) #In query table, this is BirdID
LastSeenYear <- read_csv("CurrentBTOextended27032023.csv") #In query table, this is CurrentBTOextended
##Make terms
###BirthYear from BirthDate
BirthDate <- BirthDate %>%
mutate(BirthYear = format(BirthDate, "%Y")) %>%
mutate(BirthYear = as.numeric(BirthYear))
###Lifespan
Lifespan <- merge(BirthDate,LastSeenYear,by="BirdID", all = TRUE) %>%
mutate(LastSeenYea = as.numeric(LastSeenYea)) %>%
mutate(BirthYear = as.numeric(BirthYear)) %>%
mutate(Lifespan = LastSeenYea - BirthYear) %>%
filter(LastSeenYea < 2022)  %>%
select(BirdID,Lifespan,BirthYear,LastSeenYea)
colnames(Lifespan)[colnames(Lifespan) == 'LastSeenYea'] <- 'LastSeenYear'
##Link lifespan to dataframe
SequencedIndividualsBirdIDsExtraROH<- merge(SequencedIndividualsBirdIDsExtraROH, Lifespan, by="BirdID", all = TRUE)
SurvivingBirdsLifespan<-subset(SequencedLifespan, SequencedLifespan$Lifespan>0)
##Link n offspring to dataframe
Offspring <- read_csv("Offspring27032023.csv",col_types = cols(BirthDate = col_date(format = "%d/%m/%Y")))
ROcount <- Offspring %>% filter(Confidence > 80) %>% count(Parent) %>% rename(BirdID = Parent,ReproductiveOutput = n)
SequencedIndividualsBirdIDsExtraROH<- merge(SequencedIndividualsBirdIDsExtraROH, ROcount, by="BirdID", all = TRUE)
##Add in life-history traits
#Lifespan ----
##Read files
BirthDate <- read_csv("BirthDate27032023.csv", col_types = cols(BirthDate = col_date(format = "%d/%m/%Y"))) #In query table, this is BirdID
LastSeenYear <- read_csv("CurrentBTOextended27032023.csv") #In query table, this is CurrentBTOextended
BirdIDSexYear <- read_excel("BirdIDSexYear.xlsx")
##Deduplicated dataset. For duplicated samples, pick the one with best coverage
SequencedIndividualsBirdIDsExtraDeduplicated<- SequencedIndividualsBirdIDsExtraROH %>%
group_by(BirdID) %>%
top_n(1, abs(Coverage))
View(SequencedIndividualsBirdIDsExtraDeduplicated)
View(BirdIDSexYear)
##Add in sex of bird
SequencedIndividualsBirdIDsExtra<- merge(SequencedIndividualsBirdIDsExtra, BirdIDSexYear, by= "BirdID", all= TRUE)%>%
select(BirdID,Sex)
##Add in missing BirdIDs from LIMS26757p1raw4
SequencedIndividualsBirdIDsExtra<- SequencedIndividualsBirdIDs %>%
left_join(select(LIMS26757p1raw4, BirdID, BloodID), by = c("ID" = "BloodID")) %>%
mutate(BirdID = coalesce(BirdID.x, BirdID.y)) %>%
select (-c(BirdID.x, BirdID.y))
##Add in sex of bird
SequencedIndividualsBirdIDsExtra <- merge(SequencedIndividualsBirdIDsExtra, BirdIDSexYear[, c("BirdID", "Sex")], by = "BirdID", all.x = TRUE)
##Add in missing BirdIDs from LIMS26757p1raw4
SequencedIndividualsBirdIDsExtra<- SequencedIndividualsBirdIDs %>%
left_join(select(LIMS26757p1raw4, BirdID, BloodID), by = c("ID" = "BloodID")) %>%
mutate(BirdID = coalesce(BirdID.x, BirdID.y)) %>%
select (-c(BirdID.x, BirdID.y))
##Add in sex of bird
SequencedIndividualsBirdIDsExtra <- merge(SequencedIndividualsBirdIDsExtra, BirdIDSexYear[, c("BirdID", "Sex")], by = "BirdID", all.x = TRUE)
View(SequencedIndividualsBirdIDsExtra)
##Add in missing BirdIDs from LIMS26757p1raw4
SequencedIndividualsBirdIDsExtra<- SequencedIndividualsBirdIDs %>%
left_join(select(LIMS26757p1raw4, BirdID, BloodID), by = c("ID" = "BloodID")) %>%
mutate(BirdID = coalesce(BirdID.x, BirdID.y)) %>%
select (-c(BirdID.x, BirdID.y))
##Add in sex of bird
SequencedIndividualsBirdIDsExtraSex <- merge(SequencedIndividualsBirdIDsExtra, BirdIDSexYear[, c("BirdID", "Sex")], by = "BirdID", all.x = TRUE)
View(SequencedIndividualsBirdIDsExtraSex)
View(BirdIDSexYear)
SequencedIndividualsBirdIDsExtraSex<-SequencedIndividualsBirdIDsExtraSex[!duplicated(SequencedIndividualsBirdIDsExtraSex),]
View(SequencedIndividualsBirdIDsExtraSex)
##Add in genotypic sex of bird (heterozygosity of Z chromosome)
Zheterozygosity <- read.delim("plink2.scount",sep=" ",header=T,row.names=NULL)
##Add in genotypic sex of bird (heterozygosity of Z chromosome)
Zheterozygosity <- read.table("plink2.scount"
##Add in inbreeding coefficients
##ROH calculated using PLINK:  --allow-extra-chr --bfile mergedimputedchromosomes --homozyg-density 200 --homozyg-gap 300 --homozyg-het 2 --homozyg-kb 1300 --homozyg-snp 50 --homozyg-window-het 2 --homozyg-window-missing 4 --homozyg-window-snp 50 --out mergedimputedchromosomes
MySequencedIndividuals<-read_excel("mergedimputedchromosomes.hom.indiv.xlsx")
##Add in genotypic sex of bird (heterozygosity of Z chromosome)
Zheterozygosity <- read.table("plink2.scount")
##Add in genotypic sex of bird (heterozygosity of Z chromosome)
Zheterozygosity <- read.table("plink2.scount")
View(Zheterozygosity)
##Add in genotypic sex of bird (heterozygosity of Z chromosome)
Zheterozygosity <- read.table("plink2.scount",header=TRUE, col.names=c("Filepath", "nHom", "nHet"))
Het$Zheterozygosity<- nHet$Zheterozygosity/nHom$Zheterozygosity
Zheterozygosity$Het<- Zheterozygosity$nHet/Zheterozygosity$nHom
hist(Zheterozygosity$Het)
hist(Zheterozygosity$Het, bins=20)
hist(Zheterozygosity$Het, breaks=20)
hist(Zheterozygosity$Het, breaks=20)
hist(Zheterozygosity$Het, breaks=40)
Zheterozygosity$Sex<-Zheterozygosity$Het
hist(Zheterozygosity$Het, breaks=40)
hist(Zheterozygosity$Het, breaks=50)
hist(Zheterozygosity$Het, breaks=60)
hist(Zheterozygosity$Het, breaks=100)
hist(Zheterozygosity$Het, breaks=120)
hist(Zheterozygosity$Het, breaks=120, xaxt="n")
axis(1, at=seq(min(data), max(data), by=0.01))  # Adjust 'by' to control spacing of labels
axis(1, at=seq(min(data), max(Zheterozygosity$Het), by=0.01))  # Adjust 'by' to control spacing of labels
axis(1, at=seq(min(Zheterozygosity$Het), max(Zheterozygosity$Het), by=0.01))  # Adjust 'by' to control spacing of labels
hist(Zheterozygosity$Het, breaks=120, xaxt="n")
axis(1, at=seq(min(Zheterozygosity$Het), max(Zheterozygosity$Het), by=0.01))  # Adjust 'by' to control spacing of labels
hist(Zheterozygosity$Het, breaks=120, xaxt="n")
axis(1, at=seq(min(Zheterozygosity$Het), max(Zheterozygosity$Het), by=0.005))  # Adjust 'by' to control spacing of labels
axis(1, at=seq(min(Zheterozygosity$Het), max(Zheterozygosity$Het), by=0.002))  # Adjust 'by' to control spacing of labels
hist(Zheterozygosity$Het, breaks=120, xaxt="n")
axis(1, at=seq(min(Zheterozygosity$Het), max(Zheterozygosity$Het), by=0.002))  # Adjust 'by' to control spacing of labels
#0.08 is dividing point. 0.076 to 0.084 is unclear.
Zheterozygosity <- Zheterozygosity %>%
mutate(Sex = case_when(
Het > 0.084 ~ "1",           # If Het > 0.084, set Sex to "1"
Het < 0.076 ~ "0",           # If Het < 0.076, set Sex to "0"
Het >= 0.076 & Het <= 0.084 ~ "Unsure",  # If Het is between 0.076 and 0.084, set Sex to "Unsure"
TRUE ~ NA_character_         # In case any other values exist, handle them
))
##Add in genotypic sex of bird (heterozygosity of Z chromosome)
Zheterozygosity <- read.table("plink2.scount",header=TRUE, col.names=c("Filepath", "nHom", "nHet"))
Zheterozygosity$Het<- Zheterozygosity$nHet/Zheterozygosity$nHom
#0.08 is dividing point. 0.076 to 0.084 is unclear.
Zheterozygosity <- Zheterozygosity %>%
mutate(GenotypeSex = case_when(
Het > 0.084 ~ "1",           # If Het > 0.084, set Sex to "1"
Het < 0.076 ~ "0",           # If Het < 0.076, set Sex to "0"
Het >= 0.076 & Het <= 0.084 ~ "Unsure",  # If Het is between 0.076 and 0.084, set Sex to "Unsure"
TRUE ~ NA_character_         # In case any other values exist, handle them
))
SequencedIndividualsBirdIDsExtraSex <- ZHeterozygosity %>%
left_join(SequencedIndividualsBirdIDsExtraSex, by = "Filepath") %>%
group_by(Filepath) %>%
mutate(match_status = ifelse(all(GenotypicSex == Sex, na.rm = TRUE), "match", "no match")) %>%
ungroup()
SequencedIndividualsBirdIDsExtraSex <- Zheterozygosity %>%
left_join(SequencedIndividualsBirdIDsExtraSex, by = "Filepath") %>%
group_by(Filepath) %>%
mutate(match_status = ifelse(all(GenotypicSex == Sex, na.rm = TRUE), "match", "no match")) %>%
ungroup()
SequencedIndividualsBirdIDsExtraSex <- Zheterozygosity %>%
left_join(SequencedIndividualsBirdIDsExtraSex, by = "Filepath") %>%
group_by(Filepath) %>%
mutate(match_status = ifelse(all(GenotypeSex == Sex, na.rm = TRUE), "match", "no match")) %>%
ungroup()
#0.08 is dividing point. 0.076 to 0.084 is unclear.
Zheterozygosity <- Zheterozygosity %>%
mutate(GenotypeSex = case_when(
Het > 0.084 ~ "0",           # If Het > 0.084, set Sex to "0"
Het < 0.076 ~ "1",           # If Het < 0.076, set Sex to "1"
Het >= 0.076 & Het <= 0.084 ~ "Unsure",  # If Het is between 0.076 and 0.084, set Sex to "Unsure"
TRUE ~ NA_character_         # In case any other values exist, handle them
))
SequencedIndividualsBirdIDsExtraSex <- Zheterozygosity %>%
left_join(SequencedIndividualsBirdIDsExtraSex, by = "Filepath") %>%
group_by(Filepath) %>%
mutate(match_status = ifelse(all(GenotypeSex == Sex, na.rm = TRUE), "match", "no match")) %>%
ungroup()
##Add in genotypic sex of bird (heterozygosity of Z chromosome)
Zheterozygosity <- read.table("plink2.scount",header=TRUE, col.names=c("Filepath", "nHom", "nHet"))
Zheterozygosity$Het<- Zheterozygosity$nHet/Zheterozygosity$nHom
hist(Zheterozygosity$Het, breaks=120)
#0.08 is dividing point. 0.076 to 0.084 is unclear.
Zheterozygosity <- Zheterozygosity %>%
mutate(GenotypeSex = case_when(
Het > 0.084 ~ "0",           # If Het > 0.084, set Sex to "0"
Het < 0.076 ~ "1",           # If Het < 0.076, set Sex to "1"
Het >= 0.076 & Het <= 0.084 ~ "Unsure",  # If Het is between 0.076 and 0.084, set Sex to "Unsure"
TRUE ~ NA_character_         # In case any other values exist, handle them
))
SequencedIndividualsBirdIDsExtraSex <- Zheterozygosity %>%
left_join(SequencedIndividualsBirdIDsExtraSex, by = "Filepath") %>%
group_by(Filepath) %>%
mutate(match_status = ifelse(all(GenotypeSex == Sex, na.rm = TRUE), "match", "no match")) %>%
ungroup()
##Add in sex of bird
SequencedIndividualsBirdIDsExtraSex <- merge(SequencedIndividualsBirdIDsExtra, BirdIDSexYear[, c("BirdID", "Sex")], by = "BirdID", all.x = TRUE)
SequencedIndividualsBirdIDsExtraSex<-SequencedIndividualsBirdIDsExtraSex[!duplicated(SequencedIndividualsBirdIDsExtraSex),]
##Add in genotypic sex of bird (heterozygosity of Z chromosome)
Zheterozygosity <- read.table("plink2.scount",header=TRUE, col.names=c("Filepath", "nHom", "nHet"))
Zheterozygosity$Het<- Zheterozygosity$nHet/Zheterozygosity$nHom
hist(Zheterozygosity$Het, breaks=120)
#0.08 is dividing point. 0.076 to 0.084 is unclear.
Zheterozygosity <- Zheterozygosity %>%
mutate(GenotypeSex = case_when(
Het > 0.084 ~ "0",           # If Het > 0.084, set Sex to "0"
Het < 0.076 ~ "1",           # If Het < 0.076, set Sex to "1"
Het >= 0.076 & Het <= 0.084 ~ "Unsure",  # If Het is between 0.076 and 0.084, set Sex to "Unsure"
TRUE ~ NA_character_         # In case any other values exist, handle them
))
SequencedIndividualsBirdIDsExtraSex <- Zheterozygosity %>%
left_join(SequencedIndividualsBirdIDsExtraSex, by = "Filepath") %>%
group_by(Filepath) %>%
mutate(match_status = ifelse(all(GenotypeSex == Sex, na.rm = TRUE), "match", "no match")) %>%
ungroup()
##Add in sex of bird
SequencedIndividualsBirdIDsExtraSex <- merge(SequencedIndividualsBirdIDsExtra, BirdIDSexYear[, c("BirdID", "Sex")], by = "BirdID", all.x = TRUE)
SequencedIndividualsBirdIDsExtraSex<-SequencedIndividualsBirdIDsExtraSex[!duplicated(SequencedIndividualsBirdIDsExtraSex),]
##Add in genotypic sex of bird (heterozygosity of Z chromosome)
Zheterozygosity <- read.table("plink2.scount",header=TRUE, col.names=c("Filepath", "nHom", "nHet"))
Zheterozygosity$Het<- Zheterozygosity$nHet/Zheterozygosity$nHom
hist(Zheterozygosity$Het, breaks=120)
#0.08 is dividing point. 0.076 to 0.084 is unclear.
Zheterozygosity <- Zheterozygosity %>%
mutate(GenotypeSex = case_when(
Het > 0.084 ~ "0",           # If Het > 0.084, set Sex to "0"
Het < 0.076 ~ "1",           # If Het < 0.076, set Sex to "1"
Het >= 0.076 & Het <= 0.084 ~ "Unsure",  # If Het is between 0.076 and 0.084, set Sex to "Unsure"
TRUE ~ NA_character_         # In case any other values exist, handle them
))
SequencedIndividualsBirdIDsExtraSex <- SequencedIndividualsBirdIDsExtraSex %>%
left_join(ZHeterozygosity %>% select(Filepath, GenotypeSex), by = "Filepath")
SequencedIndividualsBirdIDsExtraSex <- SequencedIndividualsBirdIDsExtraSex %>%
left_join(Zheterozygosity %>% select(Filepath, GenotypeSex), by = "Filepath")
SequencedIndividualsBirdIDsExtraSex <- SequencedIndividualsBirdIDsExtraSex %>%
mutate(SexMatch = ifelse(Sex == GenotypeSex, "match", "no match"))
SequencedIndividualsBirdIDsExtraSexCheck <- SequencedIndividualsBirdIDsExtraSex %>%
left_join(Zheterozygosity %>% select(Filepath, Het, GenotypeSex), by = "Filepath")
SequencedIndividualsBirdIDsExtraSexCheck <- SequencedIndividualsBirdIDsExtraSexCheck %>%
mutate(SexMatch = ifelse(Sex == GenotypeSex, "match", "no match"))
##Add in sex of bird
SequencedIndividualsBirdIDsExtraSex <- merge(SequencedIndividualsBirdIDsExtra, BirdIDSexYear[, c("BirdID", "Sex")], by = "BirdID", all.x = TRUE)
SequencedIndividualsBirdIDsExtraSex<-SequencedIndividualsBirdIDsExtraSex[!duplicated(SequencedIndividualsBirdIDsExtraSex),]
##Add in genotypic sex of bird (heterozygosity of Z chromosome)
Zheterozygosity <- read.table("plink2.scount",header=TRUE, col.names=c("Filepath", "nHom", "nHet"))
Zheterozygosity$Het<- Zheterozygosity$nHet/Zheterozygosity$nHom
hist(Zheterozygosity$Het, breaks=120)
#0.08 is dividing point. 0.076 to 0.084 is unclear.
Zheterozygosity <- Zheterozygosity %>%
mutate(GenotypeSex = case_when(
Het > 0.084 ~ "0",           # If Het > 0.084, set Sex to "0"
Het < 0.076 ~ "1",           # If Het < 0.076, set Sex to "1"
Het >= 0.076 & Het <= 0.084 ~ "Unsure",  # If Het is between 0.076 and 0.084, set Sex to "Unsure"
TRUE ~ NA_character_         # In case any other values exist, handle them
))
SequencedIndividualsBirdIDsExtraSexCheck <- SequencedIndividualsBirdIDsExtraSex %>%
left_join(Zheterozygosity %>% select(Filepath, Het, GenotypeSex), by = "Filepath")
SequencedIndividualsBirdIDsExtraSexCheck <- SequencedIndividualsBirdIDsExtraSexCheck %>%
mutate(SexMatch = ifelse(Sex == GenotypeSex, "match", "no match"))
View(SequencedIndividualsBirdIDsExtraSexCheck)
##Add in sex of bird
SequencedIndividualsBirdIDsExtraSex <- merge(SequencedIndividualsBirdIDsExtra, BirdIDSexYear[, c("BirdID", "Sex")], by = "BirdID", all.x = TRUE)
SequencedIndividualsBirdIDsExtraSex<-SequencedIndividualsBirdIDsExtraSex[!duplicated(SequencedIndividualsBirdIDsExtraSex),]
##Add in genotypic sex of bird (heterozygosity of Z chromosome)
Zheterozygosity <- read.table("plink2.scount",header=TRUE, col.names=c("Filepath", "nHom", "nHet"))
Zheterozygosity$Het<- Zheterozygosity$nHet/Zheterozygosity$nHom
Zheterozygosity$Het <- format(Zheterozygosity$Het, digits = 5, nsmall = 5)
hist(Zheterozygosity$Het, breaks=120)
#0.08 is dividing point. 0.076 to 0.084 is unclear.
Zheterozygosity <- Zheterozygosity %>%
mutate(GenotypeSex = case_when(
Het > 0.084 ~ "0",           # If Het > 0.084, set Sex to "0"
Het < 0.076 ~ "1",           # If Het < 0.076, set Sex to "1"
Het >= 0.076 & Het <= 0.084 ~ "Unsure",  # If Het is between 0.076 and 0.084, set Sex to "Unsure"
TRUE ~ NA_character_         # In case any other values exist, handle them
))
SequencedIndividualsBirdIDsExtraSexCheck <- SequencedIndividualsBirdIDsExtraSex %>%
left_join(Zheterozygosity %>% select(Filepath, Het, GenotypeSex), by = "Filepath")
SequencedIndividualsBirdIDsExtraSexCheck <- SequencedIndividualsBirdIDsExtraSexCheck %>%
mutate(SexMatch = ifelse(Sex == GenotypeSex, "match", "no match"))
View(SequencedIndividualsBirdIDsExtraSexCheck)
##Add in sex of bird
SequencedIndividualsBirdIDsExtraSex <- merge(SequencedIndividualsBirdIDsExtra, BirdIDSexYear[, c("BirdID", "Sex")], by = "BirdID", all.x = TRUE)
SequencedIndividualsBirdIDsExtraSex<-SequencedIndividualsBirdIDsExtraSex[!duplicated(SequencedIndividualsBirdIDsExtraSex),]
##Add in genotypic sex of bird (heterozygosity of Z chromosome)
Zheterozygosity <- read.table("plink2.scount",header=TRUE, col.names=c("Filepath", "nHom", "nHet"))
Zheterozygosity$Het<- Zheterozygosity$nHet/Zheterozygosity$nHom
Zheterozygosity$Het <- round(Zheterozygosity$Het, 5)
hist(Zheterozygosity$Het, breaks=120)
#0.08 is dividing point. 0.076 to 0.084 is unclear.
Zheterozygosity <- Zheterozygosity %>%
mutate(GenotypeSex = case_when(
Het > 0.084 ~ "0",           # If Het > 0.084, set Sex to "0"
Het < 0.076 ~ "1",           # If Het < 0.076, set Sex to "1"
Het >= 0.076 & Het <= 0.084 ~ "Unsure",  # If Het is between 0.076 and 0.084, set Sex to "Unsure"
TRUE ~ NA_character_         # In case any other values exist, handle them
))
SequencedIndividualsBirdIDsExtraSexCheck <- SequencedIndividualsBirdIDsExtraSex %>%
left_join(Zheterozygosity %>% select(Filepath, Het, GenotypeSex), by = "Filepath")
SequencedIndividualsBirdIDsExtraSexCheck <- SequencedIndividualsBirdIDsExtraSexCheck %>%
mutate(SexMatch = ifelse(Sex == GenotypeSex, "match", "no match"))
# Plot the histogram with color coding based on Sex
ggplot(SequencedIndividualsBirdIDsExtraSexCheck, aes(x = Het, fill = factor(Sex))) +
geom_histogram(binwidth = 0.01, alpha = 0.7, position = "identity", color = "black") +
scale_fill_manual(values = c("1" = "blue", "0" = "red")) +  # Blue for Sex=1, Red for Sex=0
labs(x = "Het", y = "Frequency", title = "Histogram of Het with Sex-based Colors") +
theme_minimal() +
theme(legend.title = element_blank(), legend.position = "top")
# Plot the histogram with increased bins
ggplot(SequencedIndividualsBirdIDsExtraSexCheck, aes(x = Het, fill = factor(Sex))) +
geom_histogram(bins = 120, alpha = 0.7, position = "identity", color = "black") +
scale_fill_manual(values = c("1" = "blue", "0" = "red")) +  # Blue for Sex=1, Red for Sex=0
labs(x = "Het", y = "Frequency", title = "Histogram of Het with Sex-based Colors") +
theme_minimal() +
theme(legend.title = element_blank(), legend.position = "top")
# Plot the histogram of Coverage colored by SexMatch
ggplot(SequencedIndividualsBirdIDsExtraSexCheck, aes(x = Coverage, fill = SexMatch)) +
geom_histogram(bins = 30, alpha = 0.7, position = "identity", color = "black") +
scale_fill_manual(values = c("match" = "blue", "no match" = "red")) +  # Blue for match, Red for no match
labs(x = "Coverage", y = "Frequency", title = "Histogram of Coverage by SexMatch") +
theme_minimal() +
theme(legend.title = element_blank(), legend.position = "top")
UnreliableIndivs <- SequencedIndividualsBirdIDsExtraSexCheck %>%
filter(SexMatch == "no match" & Coverage > 3)
View(UnreliableIndivs)
SequencedIndividualsBirdIDsExtraSexCheck <- SequencedIndividualsBirdIDsExtraSexCheck %>%
mutate(SexMatchDirection = case_when(
Sex == GenotypeSex ~ "match",  # If Sex matches GenotypeSex, print "match"
GenotypeSex == 1 ~ "mismatched genotyped male",  # If GenotypeSex is 1 (male), print "mismatched genotyped male"
GenotypeSex == 0 ~ "mismatched genotyped female",  # If GenotypeSex is 0 (female), print "mismatched genotyped female"
TRUE ~ "unknown"  # In case other conditions apply (optional)
))
##Add in genotype sex from Z:W coverage and Autosome:W coverage
Zheterozygosity <- read.table("zw_autosomew_coverageall_clean.txt",header=FALSE, col.names=c("SeqID", "Z:W_coverage", "Autosome:W_coverage"))
##Add in genotype sex from Z:W coverage and Autosome:W coverage
SexChromosomeCoverage <- read.delim("zw_autosomew_coverageall_clean.txt",sep=" ",header=F,col.names=c("SeqID", "Z:W_coverage", "Autosome:W_coverage"),row.names=NULL)
View(SexChromosomeCoverage)
SequencedIndividualsBirdIDsExtraSexCheck <- merge(SexChromosomeCoverage,
SequencedIndividualsBirdIDsExtraSexCheck,
by = "SeqID")
View(SequencedIndividualsBirdIDsExtraSexCheck)
UnreliableIndivs <- SequencedIndividualsBirdIDsExtraSexCheck %>%
filter(SexMatch == "no match" & Coverage > 3)
hist(SequencedIndividualsBirdIDsExtraSexCheck$Z.W_coverage)
hist(SequencedIndividualsBirdIDsExtraSexCheck$Autosome.W_coverage)
ggplot(SequencedIndividualsBirdIDsExtraSexCheck, aes(x = Z.W_coverage, fill = factor(Sex))) +
geom_histogram(bins = 120, alpha = 0.7, position = "identity", color = "black") +
scale_fill_manual(values = c("1" = "blue", "0" = "red")) +  # Blue for Sex=1, Red for Sex=0
labs(x = "Het", y = "Frequency", title = "Histogram of Het with Sex-based Colors") +
theme_minimal() +
theme(legend.title = element_blank(), legend.position = "top")
ggplot(SequencedIndividualsBirdIDsExtraSexCheck, aes(x = Z.W_coverage, fill = factor(Sex))) +
geom_histogram(bins = 120, alpha = 0.7, position = "identity", color = "black") +
scale_fill_manual(values = c("1" = "blue", "0" = "red")) +  # Blue for Sex=1, Red for Sex=0
labs(x = "Z:W coverage", y = "Frequency", title = "Histogram of Z:W Coverage with Sex-based Colors") +
theme_minimal() +
theme(legend.title = element_blank(), legend.position = "top")
ggplot(SequencedIndividualsBirdIDsExtraSexCheck, aes(x = Autosome.W_coverage, fill = factor(Sex))) +
geom_histogram(bins = 120, alpha = 0.7, position = "identity", color = "black") +
scale_fill_manual(values = c("1" = "blue", "0" = "red")) +  # Blue for Sex=1, Red for Sex=0
labs(x = "Autosome:W coverage", y = "Frequency", title = "Histogram of Autosome:W Coverage with Sex-based Colors") +
theme_minimal() +
theme(legend.title = element_blank(), legend.position = "top")
